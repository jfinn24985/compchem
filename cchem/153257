format 75
"xml2" // External Components::xml2
  revision 3
  modified_by 47 "finnerty"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  stereotype "library"
  comment "The libxml2 library system"
  deploymentview 170537 "xml2"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 253353 "xml"
      stereotype "library"
      associated_artifacts
      end
      ncouples 2
      key "butter project" value "xml2"
      key "butter buildfile" value "xml2"
      comment "${butter_generic}
LINK = -lxml2 "
    end

    artifact 130863 "xml2.jam"
      stereotype "document"
      associated_artifacts
      end
      comment "#
#  Jamfile for the libxml2
#
#

# libxml2 library support module
#
# The module attempts to detect libxml2:
#
# toolset.using xml2 : /usr/local/... ;
#
# Example:
#
#     exe myapp : myapp.cpp myapp.h  
#                 /xml2//xml ;
#

# import modules ;
# import feature ;
import errors ;
# import type ;
# import \"class\" : new ;
import project ;
# import toolset : flags ;
# import os ;
# import virtual-target ;
import string ;

project.initialize $(__name__) ;
project xml2 ;

# Save the project so that we tolerate 'import + using' combo.
.project = [ project.current ] ;


# Initialized the XML2 support module. The 'prefix' parameter
# tells where XML2 is installed. 
rule init ( )
{
    project.push-current $(.project) ;
    
    if $(.initialized)
    {
         errors.error
              \"Attempt to reinitialize libxml2 with different installation prefix\" ;
    }
    else
    {
        .initialized = true ;

        #~ Setup prefixes for include, binaries and libs.
        .compileflags = [ string.join [ string.words [ SHELL \"pkg-config libxml-2.0 --cflags-only-other\" ] ] : \" \" ] ;
        .incprefix = [ MATCH \"-I\\(.*\\)\" : [ string.words [ SHELL \"pkg-config libxml-2.0 --cflags-only-I\" ] ] ] ;
        .linkflags = [ string.join [ MATCH \"-lxml2|(.*)\" : [ string.words [ SHELL \"pkg-config libxml-2.0 --libs\" ] ] ] : \" \" ] ;

        # Use pre-built xml2
        {
            local usage-requirements = 
                  <define>XML_XML2
                  <include>$(.incprefix) 
                  <cflags>$(.compileflags)
                  <linkflags>$(.linkflags)
                  <allow>xml2
                ;
            
            lib xml : $(main)
                : # requirements
                  <name>xml2 
                : # default-build
                : # usage-requirements
                  $(usage-requirements)
                ;
        }
    }
    
    project.pop-current ;
}

rule initialized ( )
{
    return $(.initialized) ;
}


# Local Variables:
# mode: makefile
# End: 
"
    end
  end
end
